var interceptor=function($window,$q,$cookies){return{request:function(config){var t=$cookies.get("access_token");return t&&(config.headers.authorization=t.toString()),config},requestError:function(config){return config},response:function(res){return res},responseError:function(res){return $q.reject(res)}}};angular.module("app",["ui.router","ui.router.state.events","ngResource","app.env","app.services","app.directives","app.controllers","ngCookies","vcRecaptcha"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","$sceDelegateProvider",function($stateProvider,$urlRouterProvider,$locationProvider,$httpProvider,$sceDelegateProvider){$httpProvider.interceptors.push(interceptor),jsGrid.validators.empty={message:"Empty value not allowed.",validator:function(value,item){return 0!==value.replace(/\s/g,"").length}},jsGrid.validators.noUndefinedOrNull={message:"Empty value not allowed.",validator:function(value,item){return null!==value&&void 0!==value}},$stateProvider.state("admin",{url:"/admin",views:{content:{templateUrl:"views/Admin/index.html"},header:{templateUrl:"views/no-header.html"},footer:{templateUrl:"views/no-footer.html"}}}).state("freshfoods-dashboard",{url:"/freshfoods/dashboard",views:{content:{templateUrl:"views/FreshFood/dashboard.html"},header:{templateUrl:"views/header.html"},footer:{templateUrl:"views/footer.html"}}}).state("rmart-dashboard",{url:"/rmart/dashboard",views:{content:{templateUrl:"views/RMart/dashboard.html"},header:{templateUrl:"views/header.html"},footer:{templateUrl:"views/footer.html"}}}).state("freshfoods-view-all",{url:"/freshfoods/view/all/:v",views:{content:{templateUrl:"views/FreshFood/viewAll.html"},header:{templateUrl:"views/header.html"},footer:{templateUrl:"views/footer.html"}}}).state("otherwise",{url:"*path",views:{mainContent:{templateUrl:"views/404.html"},header:{templateUrl:"views/header.html"},footer:{templateUrl:"views/footer.html"}}}),$urlRouterProvider.otherwise("/")}]).run(["$rootScope","$state","$window","$cookies","utils",function($rootScope,$state,$window,$cookies,utils){var exemptedUrls=["logout"];angular.extend($rootScope,{app:"rmart",logout:function(){$cookies.remove("access_token"),$state.go("admin")},changeApp:function(app){$rootScope.app=app},fillUp:function(token){var decoded=utils.parseJwt($cookies.get("access_token"));return $rootScope.app=decoded.app,$rootScope.email=decoded.email,$rootScope.role=decoded.role,decoded}}),$rootScope.$on("$stateChangeStart",function(event,next,toParams,from,fromParams){if(-1===exemptedUrls.indexOf(next.name)){var token=$cookies.get("access_token");"admin"===next.name&&"/admin"===next.url?void 0!==token&&($rootScope.fillUp(utils.parseJwt(token)),event.preventDefault(),$state.go($rootScope.app+"-dashboard")):void 0===token?(event.preventDefault(),$rootScope.logout()):$rootScope.fillUp(utils.parseJwt(token))}})}]),angular.module("app.env",[]).constant("ENV",{NAME:"development",API_URL:"//localhost:3000/v1/",UI_URL:"//localhost:7000/",VERSION:"1.0.0"}),angular.module("app.directives",[]).directive("appsDropdown",function($timeout){return{restrict:"E",template:'<div id="apps-dropdown" class="ui floating dropdown labeled selection icon button"><i class="world icon"></i><span class="text">{{app === \'rmart\'? \'RMart\':\'Fresh Foods\'}}</span><div class="menu"><div class="item">RMart</div><div class="item">Fresh Foods</div></div></div>',scope:"=",replace:!0,link:function(scope,el,attrs){el.dropdown({onChange:function(val){scope.app=val.replace(" ",""),scope.$apply()}})}}}),angular.module("app.directives").directive("jsgrid",["utils",function(utils,$timeout){return{restrict:"E",replace:!0,scope:"=",bindToController:!0,link:function(scope,el,attrs){scope.$watchCollection("viewGrid.data",function(newVal,oldVal){0!==newVal.length&&el.jsGrid({width:"100%",height:"auto",filtering:attrs.pageSize||!0,editing:attrs.editing||!0,sorting:attrs.sorting||!0,paging:attrs.paging||!0,pageSize:attrs.pageSize||15,data:scope.viewGrid.data,fields:scope.viewGrid.fields,noDataContent:"Not found",confirmDeleting:!0,deleteConfirm:function(v){return"Do you really want to delete "+scope.tl+" ("+v[scope.tk]+") ?"},updateOnResize:!0})})}}}]),angular.module("app.directives").directive("popup",["utils",function(utils){return{restrict:"A",link:function(scope,el,attrs){var v=utils.parseJSON(attrs.popup,{});console.log(v),el.popup({on:v.mode||"click",position:"bottom center",transition:v.transition||"fade"})}}}]),angular.module("app.services",[]).service("requests",["$resource","ENV",function($resource,ENV){this.postOrPut=function(url,method,params,isArray){return $resource(ENV.API_URL+url,params,{save:{method:method||"POST",isArray:isArray||!1}},{stripTrailingSlashes:!1})},this.getAll=function(url,params,isArray){return $resource(ENV.API_URL+url,params,{query:{method:"GET",isArray:isArray||!1}},{stripTrailingSlashes:!1})},this.delete=function(url,params){return $resource(ENV.API_URL+url,params,{delete:{method:"DELETE"}},{stripTrailingSlashes:!1})}}]),angular.module("app.services").service("utils",function(){this.parseJwt=function(t){try{var base64Url=t.split(".")[1],base64=base64Url.replace("-","+").replace("_","/");return this.parseJSON(window.atob(base64))}catch(error){return console.log("parseJwt error ",error),!1}},this.capitalize=function(v){return"string"==typeof v&&(v=v[0].toUpperCase()+v.slice(1)),v},this.parseJSON=function(v,r){try{return JSON.parse(v)}catch(e){return r||[]}},this.date=function(d,format,keepAsMoment){try{return d=keepAsMoment?moment(d,format||"DD-MM-YYYY hh:mm:ss a"):moment(d).format(format||"DD-MM-YYYY hh:mm:ss a")}catch(e){return"NA"}},this.areDatesEqual=function(d,d1,format){try{return d=moment(d,format),d1=moment(d1,format),d>d1?1:d<d1?-1:0}catch(e){return"NA"}},this.foodGridHTML=function(l,view){var t;if(view){t='<div class="ui labels">',c={Full:"black",Half:"brown",Quarter:"white"};for(var i=0;i<l.length;i++)t+='<a class="ui label '+c[l[i].quantity]+'">'+l[i].cost+"</a>";t+="<div>"}else t='<tr class="jsgrid-row"><td class="jsgrid-cell" style="width: 20%;">'+l.name+'</td><td class="jsgrid-cell" style="width: 5%;"><div class="row text-center"><i class="circle icon center '+(l.isVeg?"green":"red")+'"></i></div></td><td class="jsgrid-cell jsgrid-align-center" style="width: 7%;">'+l.cuisine+'</td><td class="jsgrid-cell jsgrid-align-center" style="width: 8%;">'+l.status+'</td><td class="jsgrid-cell jsgrid-align-center" style="width: 20%;">'+l.foodCategory+'</td><td class="jsgrid-cell" style="width: 16%;">'+this.foodGridHTML(l.foodCostForFoodItem,!0)+'</td><td class="jsgrid-cell" style="width: 10%;">'+this.date(l.createdAt)+'</td><td class="jsgrid-cell" style="width: 10%;">'+this.date(l.updatedAt)+'</td><td class="jsgrid-cell jsgrid-control-field jsgrid-align-center" style="width: 9%;"><input class="jsgrid-button jsgrid-edit-button" type="button" title="Edit"><input class="jsgrid-button jsgrid-delete-button" type="button" title="Delete"></td></tr>';return t}}),angular.module("app.directives").directive("jsgrid",["utils",function(utils,$timeout){return{restrict:"E",replace:!0,scope:"=",bindToController:!0,link:function(scope,el,attrs){scope.$watchCollection("viewGrid.data",function(newVal,oldVal){if(0!==newVal.length){var p={width:"100%",height:"auto",controller:scope.viewGrid.controller,filtering:!0,editing:utils.parseJSON(attrs.editing,!1)||!0,sorting:utils.parseJSON(attrs.sorting,!1)||!0,paging:utils.parseJSON(attrs.paging,!1)||!0,pageSize:utils.parseJSON(attrs.pageSize,!1)||15,data:scope.viewGrid.data||[],fields:scope.viewGrid.fields||[],noDataContent:"Not found",confirmDeleting:!0,deleteConfirm:function(v){return"Do you really want to delete "+scope.tl+" ("+v[scope.tk]+") ?"},updateOnResize:!0};scope.editRowRenderer&&(p.editRowRenderer=scope.editRowRenderer),el.jsGrid(p)}})}}}]),angular.module("app.directives").directive("popup",["utils",function(utils){return{restrict:"A",link:function(scope,el,attrs){var v=utils.parseJSON(attrs.popup,{});el.popup({on:v.mode||"click",position:"bottom center",transition:v.transition||"fade"})}}}]),angular.module("app.controllers",[]).controller("header",["$scope","$window","$state",function($scope,$window,$state){$(".ui.dropdown").dropdown(),angular.extend($scope,{lg:function(){$window.confirm("Do you want to logout?")&&$scope.logout()}})}]),angular.module("app.controllers").controller("adminIndex",["$scope","requests","$cookies","$state",function($scope,requests,$cookies,$state){angular.extend($scope,{l:{email:"",password:"",recaptcha:""},login:function(d,app){d.app=app,requests.postOrPut("admin/login/").save(d).$promise.then(function(r){r.success&&($cookies.putObject("access_token",r.data.token,{expires:new Date((new Date).getTime()+1e3*r.data.settings.expires)}),$state.go(app+"-dashboard")),$.notify(r.data.message,r.type)})},setWidgetId:function(widgetId){$scope.l.recaptcha=widgetId},setResponse:function(response){},cbExpiration:function(){$scope.l.recaptcha=""}})}]),angular.module("app.controllers").controller("ffDashboard",["$scope","requests","$state","utils",function($scope,requests,$state,utils){var l1=["isClosed","discountForAll","discountForItem","discountForCategory"];angular.extend($scope,{config:{closedDate:utils.date(new Date,"DD/MM/YYYY"),closedTimeFrom:"",closedTimeTo:"",for:$scope.app,discountForAll:!1,isClosed:!1,discountForItem:!1,discountForCategory:!1,done:!1},discount:{rate:0},submitForm:function(ty){var m,t="error";0===ty?requests.postOrPut("freshmartconfig/","PUT",{id:$scope.config.id},!0).save($scope.config).$promise.then(function(r){m="Cannot save the settings!",1===r.length&&(m="Settings saved!",t="success",$scope.config.done=!0),$.notify(m,t)}).catch(function(r){console.log(r,"ssssssssssssss"),alert("Server error!")}):1===ty&&$scope.config.discountForAll&&void 0!==$scope.discount&&(m="Cannot set the discount",requests.postOrPut("fooddiscount/","PUT",{id:$scope.discount.id},!0).save({rate:$scope.discount}).$promise.then(function(r){1===r.length&&(m="Discount saved on all foods.",t="success"),$.notify(m,t)}).catch(function(r){console.log(r,"ssss111111111ssssssssss"),alert("Server error!")}))}}),requests.getAll($scope.app+"/food/stats/",null).query().$promise.then(function(r){r.success&&($scope.stats=r.data)}),requests.getAll("fooddiscount",{foodItemId:null,foodCategoryId:null},!0).query().$promise.then(function(r){r=angular.copy(r),0!==r.length&&(r[0]=parseFloat(r[0].rate),$scope.discount=r[0])}),requests.getAll("freshmartconfig/",{for:$scope.app},!0).query().$promise.then(function(r){if(r=angular.copy(r),0!==r.length){r=r[0];for(var l=["closedDate","closedTimeFrom","closedTimeTo"],i=0;i<l.length;i++)if(r[l[i]]=r[l[i]].trim(),"Invalid date"===r[l[i]]||0===r[l[i]].length)r[l[i]]="";else if(0===i){var t1=utils.date(new Date,"DD/MM/YYYY");r[l[i]]!==t1?(r[l[i]]=t1,$scope.config.done=!1):$scope.config.done=!0}else r[l[i]]=new Date(r[l[i]]);for(var i=0;i<l1.length;i++)$("#"+l1[i]).prop("checked",r[l1[i]]);$scope.config=angular.merge({},$scope.config,r)}}),$("#discountForAll1").checkbox({onChange:function(){$scope.config.discountForAll=!$scope.config.discountForAll,$scope.$apply()}}),$("#discountForItem1").checkbox({onChange:function(){$scope.config.discountForItem=!$scope.config.discountForItem,$scope.$apply()}}),$("#discountForCategory1").checkbox({onChange:function(){$scope.config.discountForCategory=!$scope.config.discountForCategory,$scope.$apply()}}),$("#isClosed1").checkbox({onChange:function(){$scope.config.isClosed=!$scope.config.isClosed,$scope.$apply()}})}]),angular.module("app.controllers").controller("ffView",["$scope","requests","$state","$stateParams","utils",function($scope,requests,$state,$stateParams,utils){function getAllFoodGridValues(){requests.getAll($scope.v,null,!0).query().$promise.then(function(r){r=angular.copy(r),$scope.viewGrid.data=[],$scope.viewGrid.data=$scope.viewGrid.data.concat(r)})}var tObj,v=$stateParams.v,tempFCObj={};$scope.v="0"===v?"fooditem":"foodcategory",$scope.t=utils.capitalize($scope.v.slice(0,4))+" "+utils.capitalize($scope.v.slice(4)),angular.extend($scope,{error:!1,viewGrid:{data:[],fields:[],controller:{}},editRowRenderer:!1,tl:$scope.t.toLowerCase()}),$scope.add=function(f){requests.postOrPut($scope.v+"/create/").save(f).$promise.then(function(r){r.success&&(getAllFoodGridValues(),$("div.ui.popup").popup("hide all")),$.notify(r.data.message,r.type)})},function(v){-1!==["0","1"].indexOf(v)?(tObj={name:"",isVeg:!1,cuisine:"",status:"",foodCategoryId:0,quantity:{}},fields=[{name:"name",title:"Food Item",type:"text",width:"20%",validate:"empty",filtering:!0,width:"20%",editing:!1},{name:"isVeg",type:"checkbox",title:"Is Veg?",sorting:!1,width:"5%",editing:!1,filtering:!0,itemTemplate:function(v){return'<div class="row text-center"><i class="circle icon center '+(v?"green":"red")+'"></i></div>'}}],tk="name",w="10%",controller={loadData:function(filter){return $.grep($scope.viewGrid.data,function(item){var check=!0;if(void 0!==filter.name&&0!==filter.name.trim().length){var filterName=filter.name.toLowerCase().trim(),itemName=item.name.toLowerCase().trim();check=-1!==filterName.indexOf(itemName)||-1!==itemName.indexOf(filterName)}return void 0!==filter.isVeg&&(check=filter.isVeg===item.isVeg),void 0!==filter.cuisine&&0!==filter.cuisine.trim().length&&(check=item.cuisine.toLowerCase().trim().startsWith(filter.cuisine.toLowerCase().trim())),void 0!==filter.status&&0!==filter.status.trim().length&&(check=item.status.toLowerCase().trim().startsWith(filter.status.toLowerCase().trim())),void 0!==filter.foodCategoryId&&0!==filter.foodCategoryId.trim().length&&(check=tempFCObj[item.foodCategoryId]===filter.foodCategoryId.toLowerCase().trim()),check})},updateItem:function(v){requests.postOrPut($scope.v+"/update/","PUT").save(v).$promise.then(function(r){$.notify(r.data.message,r.type)})},editItem:function(v){},deleteItem:function(v){requests.delete($scope.v+"/"+v.id).delete().$promise.then(function(r){$.notify($scope.t+" ("+v.category+") Deleted.","success")})}},"1"===v?(controller={updateItem:function(v){requests.postOrPut($scope.v+"/"+v.id,"PUT").save(v).$promise.then(function(r){$.notify($scope.t+" ("+v.category+") Updated.","success")})},deleteItem:function(v){requests.delete($scope.v+"/"+v.id).delete().$promise.then(function(r){$.notify($scope.t+" ("+v.category+") Deleted.","success")})},loadData:function(filter){return $.grep($scope.viewGrid.data,function(item){return void 0===filter.category&&0===filter.category.length||void 0!==filter.foodItemsForFoodCategory?void 0!==filter.category&&0!==filter.category.length||void 0===filter.foodItemsForFoodCategory?filter.category.toLowerCase()===item.category.toLowerCase()&&item.foodItemsForFoodCategory.length===filter.foodItemsForFoodCategory:item.foodItemsForFoodCategory.length===filter.foodItemsForFoodCategory:filter.category.toLowerCase()===item.category.toLowerCase()})}},w="12.5%",tk="category",tObj={category:"",error:""},fields=[{name:"category",title:"Food Category",type:"text",width:"35%",validate:"empty",filtering:!0},{title:"Total food(s) inside",name:"foodItemsForFoodCategory",type:"number",width:"10%",editing:!1,filtering:!0,itemTemplate:function(v){return v.length}},{name:"createdAt",title:"Created On",type:"text",width:w,editing:!1,filtering:!1,itemTemplate:function(v){return utils.date(v)}},{name:"updatedAt",title:"Updated On",type:"text",width:w,editing:!1,filtering:!1,itemTemplate:function(v){return utils.date(v)}},{type:"control"}],$scope.viewGrid.fields=angular.copy(fields)):"0"===v&&($scope.editRowRenderer=function(item,idx){for(var grid=this,foodConfigs=$scope.foodConfigs,allCategories=$scope.allCategories,name=$("<input>").attr("type","text").attr("name","name").val(item.name),isVeg=$("<input>").attr("type","checkbox").attr("name","isVeg"),cuisine=$("<select>").attr("name","cuisine"),status=$("<select>").attr("name","status"),foodCategory=$("<select>").attr("name","foodCategory"),quantities={},i=0;i<foodConfigs.cuisines.length;i++)0!==foodConfigs.cuisines[i].length&&cuisine.append('<option value="'+foodConfigs.cuisines[i]+'">'+foodConfigs.cuisines[i]+"</option>");for(var i=0;i<foodConfigs.statuses.length;i++)0!==foodConfigs.statuses[i].length&&status.append('<option value="'+foodConfigs.statuses[i]+'">'+foodConfigs.statuses[i]+"</option>");for(var i=0;i<foodConfigs.quantities.length;i++)0!==foodConfigs.quantities[i].length&&(quantities[foodConfigs.quantities[i]]=$("<input>").attr("type","number").attr("min","0").attr("step","1").attr("placeholder",foodConfigs.quantities[i]+" cost").attr("name",foodConfigs.quantities[i]));for(var i=0;i<item.foodCostForFoodItem.length;i++)quantities[item.foodCostForFoodItem[i].quantity].val(item.foodCostForFoodItem[i].cost);for(var i=0;i<allCategories.length;i++)""!==allCategories[i]&&foodCategory.append('<option value="'+allCategories[i].id+'">'+allCategories[i].category+"</option>");isVeg=item.isVeg?isVeg.attr("checked","checked"):isVeg.removeAttr("checked");for(var $updateButton=$("<input>").attr("type","button").addClass("jsgrid-button jsgrid-update-button"),$cancelButton=$("<input>").attr("type","button").addClass("jsgrid-button jsgrid-cancel-button"),t=Object.keys(quantities),t1=$("<td class='jsgrid-cell text-center' width='16%;'>"),t3="<td class='jsgrid-cell ",i=0;i<t.length;i++)t1.append(quantities[t[i]]);return cuisine.val(item.cuisine),status.val(item.status),foodCategory.val(item.foodCategoryId.toString()),$updateButton.on("click",function(){r1={name:name.val(),isVeg:isVeg.is(":checked"),cuisine:cuisine.find(":selected").text(),status:status.find(":selected").text(),foodCategoryId:foodCategory.find(":selected").val()};var t2;item.foodCostForFoodItem=[];for(var i=0;i<t.length;i++)t2=parseInt(quantities[t[i]].val()),!isNaN(t2)&&t2>0&&item.foodCostForFoodItem.push({cost:t2,quantity:t[i]});void 0!==r1.name&&0!==r1.name.length&&grid.updateItem(item,r1)}),$cancelButton.on("click",function(){grid.cancelEdit()}),$("<tr class='jsgrid-edit-row'>").append($(t3+"' width='20%;'>").append(name)).append($(t3+"text-center' width='5%;'>").append(isVeg)).append($(t3+"text-center' width='10%;'>").append(cuisine)).append($(t3+"text-center' width='11%;'>").append(status)).append($(t3+"text-center' width='14%;'>").append(foodCategory)).append(t1).append($(t3+"text-center' width='10%;'>").append("&nbsp;")).append($(t3+"text-center' width='10%;'>").append("&nbsp;")).append($(t3+"jsgrid-control-field jsgrid-align-center' style='width: 9%;'>").append($updateButton).append($cancelButton))},requests.getAll("fooditem/config/",{include:"foodcategory"},!1).query().$promise.then(function(r){if(r.success){r.data.cuisines.splice(0,0,""),r.data.statuses.splice(0,0,""),r.data.quantities.splice(0,0,""),r.data.foodCategories.splice(0,0,""),$scope.foodConfigs={statuses:r.data.statuses,cuisines:r.data.cuisines,quantities:r.data.quantities},$scope.allCategories=r.data.foodCategories;for(var i=0;i<$scope.allCategories.length;i++)tempFCObj[$scope.allCategories[i].id]=$scope.allCategories[i].category;fields=fields.concat([{name:"cuisine",title:"Cuisine",type:"text",width:"10%",validate:"empty",filtering:!0,itemTemplate:function(v){return v}},{name:"status",title:"Status",type:"text",validate:"empty",width:"11%",filtering:!0,itemTemplate:function(v){return v}},{name:"foodCategoryId",title:"Food Category",type:"select",items:$scope.allCategories,validate:"noUndefinedOrNull",width:"14%",editing:!1,valueField:"category",textField:"category",filtering:!0,itemTemplate:function(v){return tempFCObj[v]}},{name:"foodCostForFoodItem",title:"Food Cost",editing:!1,width:"16%",itemTemplate:function(v){return utils.foodGridHTML(v,!0)}},{name:"createdAt",title:"Created On",type:"text",width:w,editing:!1,filtering:!1,itemTemplate:function(v){return utils.date(v)}},{name:"updatedAt",title:"Updated On",type:"text",width:w,editing:!1,filtering:!1,itemTemplate:function(v){return utils.date(v)}},{type:"control",width:"9%"}]),$scope.viewGrid.fields=angular.copy(fields);for(var i=0;i<r.data.quantities.length;i++)$scope.create.quantity[r.data.quantities[i]]=0}else $.notify(r.data.message,r.type)}),$scope.openFoodItemModal=function(el){$(el).modal("setting",{closable:!1,onApprove:function(){return $scope.add($scope.create),!0},onHide:function(){return $scope.create=angular.copy(tObj),$scope.$apply(),!0},onShow:function(){$("select.dropdown").dropdown(),$(".ui.checkbox").checkbox({onChange:function(){$scope.create.isVeg=!$scope.create.isVeg}})}}).modal("toggle")}),$scope.create=angular.copy(tObj),$scope.tk=tk,$scope.viewGrid.controller=controller):$state.go("404"),getAllFoodGridValues()}(v)}]),angular.module("app.controllers").controller("rmDashboard",["$scope","requests","$state","utils",function($scope,requests,$state,utils){angular.extend($scope,{})}]);