app.orm.FoodItem.findById(5, {
include: [{
  model: app.orm.FoodCost.sequelize.models.FoodCost,
}])
app.orm.FoodItem.findById(5, {
include: [{
  model: app.orm.FoodCost.sequelize.models.FoodCost,
}])
app.orm.FoodItem.findById(5, {
include: [{
  model: app.orm.FoodCost.sequelize.models.FoodCost,
}]
})
app.orm.FoodItem.findById(5, {
include: [{
  model: app.orm.FoodCost.sequelize.models.FoodCost,
  as: 'foodCostForFoodItem'
}]
})
const g = [{a:1,b:2}, {a:1, b:3}, {a:2,b:1,c:1}, {a:1}]
let lodash = require('lodash')
lodash.find(g, {a:1})
lodash.find(g, {a:2})
lodash.find(g, {a:3})
lodash.find(g, {a:3, b:2})
lodash.find(g, {a:2, b:2})
lodash.find(g, {a:1, b:2})
varf = require('moment')
var f = require('moment')
var g = '19:47:25.216+05:30'
f
f.unix()
f.utc
f.utc()
f.tz()
f.tz
f()
f().format('HH:MM:SS')
g
f().format('HH:MM:SS.Z')
f().format('HH:MM:SS.N.Z')
f().format('HH:MM:SS.SS Z')
f().format('HH:MM:SS.SSZ')
g
f().format('HH:MM:SS.SSSZ')
app.orm.FreshMartConfig.create({{
    "for": "freshfoods",
    "isClosed": true,
    "closedDate": new Date(),
    "discountForAll": true
})
app.orm.FreshMartConfig.create({
    "for": "freshfoods",
    "isClosed": true,
    "closedDate": new Date(),
    "discountForAll": true
})
const f = require('moment')
f(new Date())
f(new Date()).format('YYYY-MM-DD')
var f = require('moment')
const f = require('moment')
f('24/07/2017')
var f = require('moment')
f(new Date('24/07/2017'))
f('24/07/2017', 'DD/MM/YYYY')
f('24/07/2017', 'DD/MM/YYYY').format('YYYY-MM-DD')
app.orm.FoodDiscount.create({rate:0.0})
var f = require('moment')
f()
f('DD-YY')
f('DD-MM-YYYY')
f(new Date(), 'DD-MM-YYYY')
f(new Date()).format('DD-MM-YYYY')
app.config.data.rmart
JSON.stringify(app.config.data.rmart)